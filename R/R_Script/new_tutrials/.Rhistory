x_1_2_kl
x_o <- c(500, 1000, 1750, 2500, 3500, 4500, 7000)
x_1_2_kl <- cut(RData$NetIncome, x_o , right = FALSE)
x_1_2_kl
len <- length(x_o)
len
(n_j <- table(x_1_2_kl))
x_mean_approx_kl <- sum(n_j/sum(n_j) * x_mean_approx_j)
round(x_mean_approx_j,4)
(x_mean_approx_kl <- sum(n_j/sum(n_j) * x_mean_approx_j))
x_o <- c(500, 1000, 1750, 2500, 3500, 4500, 7000)
x_1_2_kl <- cut(RData$NetIncome, x_o , right = FALSE)
(n_j <- table(x_1_2_kl))
len <- length(x_o)
len
x_mean_approx_j <- x_o[-len] + (x_o[-1] - x_o[len]) / 2
(x_mean_approx_kl <- sum(n_j/sum(n_j) * x_mean_approx_j))
x_o <- c(500, 1000, 1750, 2500, 3500, 4500, 7000)
x_1_2_kl <- cut(RData$NetIncome, x_o , right = FALSE)
(n_j <- table(x_1_2_kl))
len <- length(x_o)
len
x_mean_approx_j <- x_o[-len] + (x_o[-1] - x_o[-len]) / 2
(x_mean_approx_kl <- sum(n_j/sum(n_j) * x_mean_approx_j))
round(x_mean_approx_kl,4)
(p_j <- prop.table(table(x_1_2_kl)))
(n_j <- p_j * length(RData$NetIncome))
(x_mean_approx_j <- x_o[-len] + (x_o[-1] - x_o[-len]) / 2)
(x_mean_approx_kl <- sum(p_j * x_mean_approx_j))
(x_var_approx_kl <- sum(p_j * (x_mean_approx_j - x_mean_approx_kl)^2))
hist(RData$NetIncome, x_o)
rm(list = ls())
load("~/EOS/prep/R_Script/new_tutrials/1.3.3Pillar_01_QP_03_00_20151130036.RData")
x_o <- x(40, 50, 62.5, 75, 87.5, 100, 130)
x_o <- c(40, 50, 62.5, 75, 87.5, 100, 130)
x_1_3_kl <- cut(RData$Weight, x_o, right = FALSE)
len <- length(x_o)
x_mean_approx_j <- x_o[-len] + (x_o[-1] * x_o[-len]) / 2
(n_j <- table(x_1_3_kl))
x_mean_approx_kl <- sum(n_j / sum(n_j) * x_mean_approx_j)
x_mean_approx_kl
p_j <- prop.table(table = x_1_3_kl)
p_j <- prop.table(table(x_1_3_kl))
n_j <- p_j * length(RData$Weight)
x_mean_approx_j <- x_o [-len] + (x_o[-1] - x_o[-len]) / 2
x_mean_approx_kl <- sum(p_j * x_mean_approx_j)
x_var_approx_kl <- sum(p_j * (x_mean_approx_j - x_mean_approx_kl)^2)
x_var_approx_kl
x_o
(f_j <- cumsum(p_j))
(f_j <- cumsum(p_j))
j <- 2
x_first_quantile <- x_o[j] +(x_o[j+1] - x_o[j]) *
(0.25 - f_j[j-1])/ (f_j[j] - f_j[j-1])
round(x_first_quantile, 4)
EIJO <- c(77000, 61000, 76000, 33000)
(avg_EIJO <- sim(EIJO) / 4)
(avg_EIJO <- sum(EIJO) / 4)
U_rate_CDFJKM <- c(5.02, 6.95, 7.85, 7.48, 6.98, 5.96)
n <- 6
harmonic_mean <- n/sum(1/U_rate_CDFJKM)
round(harmonic_mean, 4)
(entrp <- - sum( prop.table(table(RData$EfficiencyClass))  * log(prop.table(table(RData$EfficiencyClass)))))
load("~/EOS/prep/R_Script/new_tutrials/1.1.3Pillar_01_QP_01_00_20151130034.RData")
(entrp <- - sum( prop.table(table(RData$EfficiencyClass))  * log(prop.table(table(RData$EfficiencyClass)))))
(entrp <- - sum( prop.table(table(RData$Colour))  * log(prop.table(table(RData$Colour)))))
load("~/EOS/prep/R_Script/new_tutrials/1.3.3Pillar_01_QP_03_00_20151130036.RData")
x_o <- c(40, 50, 62.5, 75, 87.5, 100, 130)
x_1_3_kl <- cut(RData$Weight, x_o, right = FALSE)
len <- length(x_o)
x_mean_approx_j <- x_o[-len] + (x_o[-1] * x_o[-len]) / 2
(n_j <- table(x_1_3_kl))
x_mean_approx_kl <- sum(n_j / sum(n_j) * x_mean_approx_j)
x_mean_approx_kl
x_o <- c(40, 50, 62.5, 75, 87.5, 100, 130)
x_1_3_kl <- cut(RData$Weight, x_o, right = FALSE)
len <- length(x_o)
x_mean_approx_j <- x_o[-len] + (x_o[-1] - x_o[-len]) / 2
(n_j <- table(x_1_3_kl))
x_mean_approx_kl <- sum(n_j / sum(n_j) * x_mean_approx_j)
x_mean_approx_kl
mm1 <- matrix(c(50, 234, 17, 73, 203, 28, 58, 208, 129), ncol = 3)
mm1
colnames(mm1) <- c("Action","Fantasy", "Comedy")
rownames(mm1) <- c("Economics", "Business", "Social Sciences")
mm1
chsq <- chisq.test(mm1)$statistic
chsq
KK <- sqrt(chsq / (sum(mm1) + chsq ))
M <- min(dim(mm1))
K_max <- sqrt((M-1) / M)
K_star <- KK / K_max
K_star
round(K_star, 4)
round(empirical_cov, 4 )
pth <- c(152, 56, 101, 138, 105, 123, 102)
pa <- c(238, 172, 186, 199, 170, 203, 145)
len <- length(pth)
empirical_cov <- sum((pth - mean(pth)) * (pa - mean(pa))) / len
round(empirical_cov, 4 )
cor_bp <- cor(pth, pa, method = "pearson")
round(cor_bp,4)
rank(pth)
pth <- c(152, 152, 152, 152, 152, 152, 152)
rank(pth)
rank(pa)
pa <- c(238, 238, 238, 238, 238, 238, 238)
rank(pa)
rnk_pth <- rank(pth)
rnk_pa <- rank(pa)
cor_sp <- (rnk_pth, rnk_pa, method = "spearman")
cor_sp <- cor(rnk_pth, rnk_pa, method = "spearman")
cor_sp
1-(0/7 *(7^2 - 1))
cor_sp <- 1 - ((6 * 56934) / (7 *(7^2 - 1)))
round(cor_sp,4)
rm(list = ls())
load("~/EOS/prep/R_Script/new_tutrials/2.3.4Pillar_03_QP_06_00_20151129023.RData")
RData
addmargins(RData)
205 - (51 + 12 + 12 + 57 + 45)
RData[2,4] <- 28
RData
addmargins(RData)
n_j_k <- RData[1,1]
n <- margin.table(RData)
p_j_k <- n_j_k / n
round(p_j_k , 4)
j <- 1
k <- 2
p_k_j <- RData[j,k] / sum(RData[j,])
round(p_k_j,4)
p_j_k <- prop.table(RData)
p_j_k
f_j_k <- t(apply(apply(p_j_k, 2, cumsum), 1, cumsum))
f_j_k
round(f_j_k,4)
rm(list = ls())
load("~/EOS/prep/R_Script/new_tutrials/2.5.4Pillar_04_QP_01_00_20151129047.RData")
RData
rnk_score <- rank(RData$Score)
rnk_dist <- rank(RData$TotalJumpingDistance)
cor_sp <- cor(rnk_score, rnk_dist, method = "spearman")
round(cor_sp,4)
res <- lm(RData$Score~RData$TotalJumpingDistance)
res
summary(res)
sum_of_res < sum(residuals(res))
sum_of_res <- sum(residuals(res))
round(sum_of_res,4)
sum_of_res <- sum(res)
sum_of_res
sum_of_res <- sum(RData$Score - residuals(res))
sum_of_res
sum_of_sqrd_res <- sum(residuals(res)^2)
round(sum_of_sqrd_res,4)
summary(res)
summary(res)
intercept <- -252.6364
slop <- 1.9672
x <- 261.5
y <- slop*x + intercept
round(y, 4)
pth <- c(152, 152, 152, 152, 152, 152, 152)
pa <- c(238, 238, 238, 238, 238, 238, 238)
rnk_pth <- rank(pth)
rnk_pa <- rank(pa)
cor_sp <- cor(rnk_pth, rnk_pa, method = "spearman")
cor_sp
pth <- c(152, 152, 152, 152, 152, 152, 152)
pa <- c(238, 238, 238, 238, 238, 238, 238)
rnk_pth <- rank(pth)
rnk_pa <- rank(pa)
cor_sp <- cor(rnk_pth, rnk_pa, method = "spearman")
cor_sp
(rnk_pth <- rank(pth))
pth <- c(152, 152, 152, 152, 152, 152, 152)
pth <- c(152, 56, 101, 138, 105, 123, 102)
pa <- c(238, 172, 186, 199, 170, 203, 145)
cor_sp <- cor(rnk_pth, rnk_pa, method = "spearman")
pth <- c(152, 56, 101, 138, 105, 123, 102)
pa <- c(238, 172, 186, 199, 170, 203, 145)
cor_sp <- cor(rnk_pth, rnk_pa, method = "spearman")
pth <- c(152, 56, 101, 138, 105, 123, 102)
pa <- c(238, 172, 186, 199, 170, 203, 145)
(rnk_pth <- rank(pth))
(rnk_pa <- rank(pa))
cor_sp <- cor(rnk_pth, rnk_pa, method = "spearman")
cor_sp
numerator <- 6 * 56934
denominator <- 7*(7^2 - 1)
cor_sp <- 1 - (numerator / denominator)
round(cor_sp,4)
cor_sp <- 1-(6*sum((rank(pth)-rank(pa))^2)/(n*(n^2-1)))
n <- 100
cor_sp <- 1-(6*sum((rank(pth)-rank(pa))^2)/(n*(n^2-1)))
n <- 7
cor_sp <- 1-(6*sum((rank(pth)-rank(pa))^2)/(n*(n^2-1)))
n <- 7
cor_sp <- 1-(100*sum((rank(pth)-rank(pa))^2)/(n*(n^2-1)))
numerator <- 6 * 56934
denominator <- 100*(100^2 - 1)
cor_sp <- 1 - (numerator / denominator)
round(cor_sp,4)
rm(list = ls())
load("~/EOS/prep/R_Script/new_tutrials/2.3.4Pillar_03_QP_06_00_20151129023.RData")
data<-as.matrix(data)
RData
205 - (51 + 12 + 12 + 57 + 45)
RData[2,4] <- 28
RData
addmargins(RData)
data<-as.matrix(RData)
j <- 1
k <- 1
n_j_k <- data[j,k]
p_j_k <- n_j_k / sum(data)
round(p_j_k, 4)
n_j_k <- RData[1,1]
n <- margin.table(RData)
p_j_k <- n_j_k / n
round(p_j_k , 4)
j <- 1
k <- 2
p_k_j <- RData[j,k] / sum(RData[,k])
round(p_k_j,4)
p_j_k <- prop.table(RData)
p_j_k
p_j <- 8/230
p_k <- 8 / 190
p_j_k <- p_j * p_k
p_j_k
p_j_k <- (p_j * p_k) * 1201
p_j_k
p_j_k <- (p_j * p_k) / 1201
p_j_k
p_j_k <- prop.table(RData)
p_j_k
f_j_k <- t(apply(apply(p_j_k, 2, cumsum), 1, cumsum))
f_j_k
round(f_j_k,4)
p_j <- 8/230
p_k <- 8 / 190
p_j_k <- (p_j * p_k) / 1201
p_j_k
(230/1201) + (190/1201)
p_j <- prop.table(RData[j,])
p_j
p_k <- prop.table(RData[,k])
p_k
p_j_k <- sum(p_j) * sum(p_k) / n
p_j_k
p_j_k <- sum(p_j)/n + sum(p_k)/n
n<-1201
n_jk_star<-(230*190)/n
p_jk<-n_jk_star/n
p_jk
rm(list = ls())
load("~/EOS/prep/R_Script/new_tutrials/1.4.1Pillar_01_QP_01_00_20151130005.RData")
RData
mode(RData$Colour)
mod <- mode(RData$Colour)
mod <- median(RData$Colour)
mod <- mod(RData$Colour)
mod <- mode(RData$Colour)
RData
mode(RData$Colour)
summary(RData$Colour)
colur <- c(RData$Colour)
getMode <- function(x){
uniqx <- unique(x)
uniqx[which.max(tabulate(match(x, uniqx)))]
}
colur <- c(RData$Colour)
mode_color <- getMode(colur)
mode_color
n_j <- table(RData$Colour)
n_j
Mode(RData$Colour)
n_j <- table(RData$Colour)
p_j <- prop.table(n_j)
entropy <-  - sum(p_j * log(p_j))
rount(entropy , 4)
round(entropy , 4)
mean(RData$EfficiencyClass)
mean(RData$price)
mean(RData$price)
mean(RData$Price)
mean_price <- mean(RData$Price)
mean_price <- mean(RData$Price)
emp_var <- (sum(RData$price^2 - mean_price^2))/length(RData$Price)
mean_price <- mean(RData$Price)
emp_var <- sum(RData$price^2 - mean_price^2)/length(RData$Price)
emp_var
mean_price <- mean(RData$Price)
(empirical_veriance <- sum(RData$Price^2 - mean_price^2) / length(RData$Price))
mean_price <- mean(RData$Price)
emp_var <- sum(RData$price^2 - mean_price^2)/length(RData$Price)
emp_var
mean_price <- mean(RData$Price)
(emp_var <- sum(RData$price^2 - mean_price^2) / length(RData$Price))
mean_price <- mean(RData$Price)
(emp_var <- (1/length(RData$Price)) * sum(RData$Price^2 - mean_price^2))
(empirical_veriance <- sum(RData$Price^2 - mean_price^2) / length(RData$Price))
(emp_var_new <- (length(RData$Price) - 1) / length(RData$Price) * var(RData$Price))
mean_price <- mean(RData$Price)
absolute_difference <- abs(RData$Price - mean_price)
mean_linear_deviation <- (1/length(RData$Price)) * sum(absolute_difference)
mean_linear_deviation
z <- quantile(RData$Price, probs = 0.5, type = 7)
MLD <- 1/length(RData$Price) * sum(abs(RData$Price - z))
MLD
rm(list = ls())
load("~/EOS/prep/R_Script/new_tutrials/1.4.2Pillar_01_QP_02_00_20171029007.RData")
RData
head(RData)
x_o  <- c(500, 1000, 1750, 2500, 3500, 4500, 7000)
x_1_2_kl <- cut(RData$NetIncome, x_o, right = FALSE)
(n_j <- table(x_1_2_kl))
(x_mean_approx_j <- x_o[-length(x_o)] + (x_o[-1] - x_o[-length(x_o)])/2)
(x_mean_approx_kl <- sum(n_j/sum(n_j) * x_mean_approx_j))
p_j <- prop.table(table(x_1_2_kl))
(p_j <- prop.table(table(x_1_2_kl)))
(x_mean_approx_j <- x_o[-length(x_o)] + (x_o[-1] - x_o[-length(x_o)]) / 2)
(x_mean_approx_kl <- sum(p_j * x_mean_approx_j))
(x_var_approx_kl <- sum(p_j * (x_mean_approx_j - x_mean_approx_kl)^2))
hist(RData$NetIncome, x_o)
rm(list = ls())
load("~/EOS/prep/R_Script/new_tutrials/1.4.3Pillar_01_QP_03_00_20151130031.RData")
RData
RData
x_o <- c(40, 50, 62.5, 75, 87.5, 100, 130)
x_1_3_kl <- (RData$Weight, x_o, right = FALSE)
(n_j <- table(x_1_3_kl))
x_o <- c(40, 50, 62.5, 75, 87.5, 100, 130)
x_1_3_kl <- (RData$Weight, x_o, right = FALSE)
x_1_3_kl <- cut(RData$Weight, x_o, right = FALSE)
(n_j <- table(x_1_3_kl))
(x_mean_approx_j <- x_o[-length(x_o)] + (x_o[-1] * x_o[-length(x_o)]) / 2)
(x_mean_apporx_kl <- sum(n_j/sum(n_j) * x_mean_approx_j)
round(x_mean_apporx_kl, 4)
(x_mean_apporx_kl <- sum(n_j/sum(n_j) * x_mean_approx_j)
x_o <- c(40, 50, 62.5, 75, 87.5, 100, 130)
x_1_3_kl <- cut(RData$Weight, x_o, right = FALSE)
(n_j <- table(x_1_3_kl))
(x_mean_approx_j <- x_o[-length(x_o)] + (x_o[-1] * x_o[-length(x_o)]) / 2)
(x_mean_apporx_kl <- sum(n_j/sum(n_j) * x_mean_approx_j)
x_mean_apporx_kl
(x_mean_apporx_kl <- sum(n_j/sum(n_j) * x_mean_approx_j))
(p_j <- prop.table(table(x_1_3_kl)))
(x_mean_approx_j <- x_o[-length(x_o)] + (x_o[-1] * x_o[-length(x_o)]) / 2)
(x_mean_apporx_kl <- sum(p_j * x_mean_approx_j))
(x_var_approx_kl <- sum(p_j * (x_mean_approx_j - x_mean_approx_kl)^2))
(p_j <- prop.table(table(x_1_3_kl)))
(x_mean_approx_j <- x_o[-length(x_o)] + (x_o[-1] * x_o[-length(x_o)]) / 2)
(x_mean_apporx_kl <- sum(p_j * x_mean_approx_j))
(x_var_approx_kl <- sum(p_j * (x_mean_approx_j - x_mean_apporx_kl)^2))
x_o
(f_j <- cumsum(p_j))
(f_j <- cumsum(p_j))
j <- 4
x_third_quantile <- x_o[j] + (x_o[j+1] - x_o[j]) * (0.75 - f_j[j-1])/(f_j[j] - f_j[j-1])
round(x_third_quantile, 4)
AEKN <- c(91000, 83000, 80000, 64000)
(avg_EIJO <- sum(EIJO) / 4)
AEKN <- c(91000, 83000, 80000, 64000)
(avg_EIJO <- sum(AEKN) / 4)
U_rate_DGJKMO <- c(8.91, 9.72, 8.04, 8.02, 8.31, 4.96)
n <- length(U_rate_DGJKMO)
(hermonic_mean <- n/sum(1/U_rate_DGJKMO))
round(hermonic_mean, 4)
rm(list = ls())
load("~/EOS/prep/R_Script/new_tutrials/1.4.3Pillar_01_QP_03_00_20151130031.RData")
head(RData)
x_o <- c(40, 50, 62.5, 75, 87.5, 100, 130)
x_1_3_kl <- cut(RData$Weight, x_o, right = FALSE)
(n_j <- table(x_1_3_kl))
(x_mean_approx_j <- x_o[-length(x_o)] + (x_o[-1] * x_o[-length(x_o)]) / 2)
(x_mean_apporx_kl <- sum(n_j/sum(n_j) * x_mean_approx_j))
head(RData)
x_o <- c(40, 50, 62.5, 75, 87.5, 100, 130)
x_1_3_kl <- cut(RData$Weight, x_o, right = FALSE)
(n_j <- table(x_1_3_kl))
(n_j <- table(x_1_3_kl))
(x_mean_approx_j <- x_o[-length(x_o)] + (x_o[-1] - x_o[-length(x_o)]) / 2)
(x_mean_apporx_kl <- sum(n_j/sum(n_j) * x_mean_approx_j))
(p_j <- prop.table(table(x_1_3_kl)))
(x_mean_approx_j <- x_o[-length(x_o)] + (x_o[-1] - x_o[-length(x_o)]) / 2)
(x_mean_apporx_kl <- sum(p_j * x_mean_approx_j))
(x_var_approx_kl <- sum(p_j * (x_mean_approx_j - x_mean_apporx_kl)^2))
mm5 <- matrix(c(57, 241, 19, 73, 201, 17, 71, 117, 204), ncol = TRUE)
colnames(mm5) <- c('Action', 'Fantasy', 'Comedy')
rownames(mm5) <- c('Economics', 'Business', 'Social Sciemces')
mm5 <- matrix(c(57, 241, 19, 73, 201, 17, 71, 117, 204), ncol = 3)
colnames(mm5) <- c('Action', 'Fantasy', 'Comedy')
rownames(mm5) <- c('Economics', 'Business', 'Social Sciemces')
mm5
(chisq <- chisq.test(mm5)$statistic)
(KK <- sqrt(chisq/sum(mm5)))
(KK <- sqrt(chisq/sum(mm5)) + chisq)
(chisq <- chisq.test(mm5)$statistic)
(KK <- sqrt(chisq/sum(mm5)  + chisq))
(M <- min(dim(mm5)))
(K_max <- sqrt((M - 1) / M))
(KK_Star <- KK/K_max)
mm5 <- matrix(c(57, 241, 19, 73, 201, 17, 71, 117, 204), ncol = 3)
colnames(mm5) <- c('Action', 'Fantasy', 'Comedy')
rownames(mm5) <- c('Economics', 'Business', 'Social Sciemces')
mm5
(chsq <- chisq.test(mm5)$statistic)
(KK <- sqrt(chsq/sum(mm5)  + chsq))
(M <- min(dim(mm5)))
(K_max <- sqrt((M - 1) / M))
(KK_Star <- KK/K_max)
round(K_Star, 4)
(K_Star <- KK/K_max)
round(K_Star, 4)
pth <- c(41, 104, 42, 48, 128, 93, 85)
pa <- c(173, 163, 167, 161, 217, 136, 102)
(emp_cov <- 1/length(pth) * (sum((pth - mean(pth)) * (pa - mean(pa)))))
empirical_cov <- sum((pth - mean(pth)) * (pa - mean(pa))) / len
len <- length(pth)
empirical_cov <- sum((pth - mean(pth)) * (pa - mean(pa))) / len
round(empirical_cov, 4 )
n <- 100
(r_s_p <- 1 - ((6 * 145463) / (n * (n^2 - 1))))
round(r_s_p, 4)
rm(list = ls())
load("~/EOS/prep/R_Script/new_tutrials/2.6.3Pillar_03_QP_06_00_20151129004.RData")
RData
sum(126, 87, 28, 6, 138)
(margin.table(RData))
376 - (48 + 41 + 36 + 126)
RData[j,k] <- 125
(margin.table(RData))
j <- 5
k <- 1
RData[j,k] <- 125
(margin.table(RData))
(p_j_k <- RData[j,k] / margin.table(RData))
round(p_j_k,4)
j <- 3
k <- 5
(n_j_k_star <- (RData[j,] * RData[,k]) / margin.table(RData))
(sum(RData[j,]))
(n_j_k_star <- (sum(RData[j,]) * sum(RData[,k])) / margin.table(RData))
round(n_j_k_star,4)
j <- 2
k <- 3
(p_k_j <- RData[j,k] / sum(RData[j,]))
round(p_k_j, 4)
(p_j_k <- prop.table(table(RData)))
(p_j_k <- prop.table(RData))
(f_j_k <- t(apply(apply(p_j_k, 2, cumsum), 1, cumsum)))
round(f_j_k, 4)
#  State the value of the sum of the squared residuals of your regression model.
RData
rm(list = ls())
load("~/EOS/prep/R_Script/new_tutrials/2.6.5Pillar_04_QP_01_00_20151129019.RData")
RData
cor_sp <- cor(RData$TotalJumpingDistance, RData$Score, method = 'spearman')
round(cor_sp, 4)
r_m  <- lm(RData$TotalJumpingDistance ~ RData$Score)
r_m
summary(r_m)
round(163.63079,4)
round(0.34975,4)
r_m  <- lm(RData$Score~RData$TotalJumpingDistance)
summary(r_m)
(residuals(r_m))
sum_sqrd_res <- sum(residuals(r_m)^2)
round(sum_sqrd_res, 4)
x <- 234.5
intercept <- -309.514
slop <- 2.205
y <- (slop * x)  + intercept
round(y, 4)
mm5 <- matrix(c(57, 241, 19, 73, 201, 17, 71, 117, 204), ncol = 3)
colnames(mm5) <- c('Action', 'Fantasy', 'Comedy')
rownames(mm5) <- c('Economics', 'Business', 'Social Sciemces')
mm5
(chsq <- chisq.test(mm5)$statistic)
(KK <- sqrt(chsq/sum(mm5)  + chsq))
(M <- min(dim(mm5)))
(K_max <- sqrt((M - 1) / M))
(K_Star <- KK/K_max)
round(K_Star, 4)
chsq <- chisq.test(mm1)$statistic
chsq
chsq <- chisq.test(mm5)$statistic
chsq
KK <- sqrt(chsq / (sum(mm5) + chsq ))
M <- min(dim(mm5))
K_max <- sqrt((M-1) / M)
K_star <- KK / K_max
round(K_star, 4)
chsq <- chisq.test(mm5)$statistic
chsq
KK <- sqrt(chsq / (sum(mm5) + chsq ))
M <- min(dim(mm5))
K_max <- sqrt((M-1) / M)
K_star <- KK / K_max
round(K_star, 4)
(chsq <- chisq.test(mm5)$statistic)
(KK <- sqrt(chsq/ (sum(mm5)  + chsq)))
(M <- min(dim(mm5)))
(K_max <- sqrt((M - 1) / M))
(K_Star <- KK/K_max)
round(K_Star, 4)
pth <- c(41, 104, 42, 48, 128, 93, 85)
pa <- c(173, 163, 167, 161, 217, 136, 102)
(cor_p <- cor(pth, pa, method = 'pearson'))
